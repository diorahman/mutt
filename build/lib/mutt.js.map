{"version":3,"sources":["mutt.js"],"names":[],"mappings":"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","file":"mutt.js","sourcesContent":["/* eslint-disable one-var */\n/** @module Mutt*/\nimport { execute, download, tmp } from './utils';\nimport Promise from 'bluebird';\nimport { writeFile } from 'fs';\n\nconst writeFileAsync = Promise.promisify(writeFile);\n\n/** Class representing Mutt */\nexport default class Mutt {\n    /**\n     * Constructs Mutt\n     *\n     * @param {String} name - The name.\n     */\n    constructor({ from, to = [], cc = [], bcc = [], subject = '', content = '', contentType = 'text/plain', attachments = [] } = []) {\n        // FIXME: validation\n        this.from = from;\n        this.to = Array.isArray(to) ? to : [ to ];\n        this.cc = cc;\n        this.bcc = bcc;\n        this.subject = subject;\n        this.content = content;\n        this.contentType = contentType;\n        this.attachments = Array.isArray(attachments) ? attachments : [ attachments ];\n    }\n\n    /**\n     * Sends the email.\n     *\n     */\n    async send() {\n        const args = [];\n        if (this.from) {\n            args.push('-e');\n            args.push(`my_hdr From:${this.from}`);\n        }\n\n        args.push('-e');\n        args.push(`set content_type=${this.contentType}`);\n\n        args.push('-s');\n        args.push(`\"${this.subject}\"`);\n\n        for (let to of this.to) {\n            args.push(to);\n        }\n\n        for (let cc of this.cc) {\n            args.push('-c');\n            args.push(cc);\n        }\n\n        for (let bcc of this.bcc) {\n            args.push('-b');\n            args.push(bcc);\n        }\n\n        if (this.attachments.length > 0) {\n            args.push('-a');\n\n            const downloaded = await Promise.map(this.attachments, (attachment) => {\n                return download(attachment);\n            });\n\n            this.attachments = [];\n            this.cleanups = [];\n            for (let file of downloaded) {\n                this.attachments.push(file.path);\n                this.cleanups.push(file.cleanup);\n            }\n\n            for (let [ index, attachments ] of this.attachments.entries()) {\n                args.push(attachments);\n                if (this.attachments.length > 1 && index < this.attachments.length - 1) {\n                    args.push('--');\n                }\n            }\n        }\n\n        const tmpFile = await tmp(),\n            { path } = tmpFile;\n\n        await writeFileAsync(path, this.body);\n        args.push('<');\n        args.push(path);\n        await execute(args);\n\n        for (let cleanup of this.cleanups) {\n            cleanup();\n        }\n    }\n}\n"],"sourceRoot":"/Users/diorahman/Experiments/hooq/src/luigi/mutt/lib"}